node {
    stage('Checkout'){
        deleteDir();
        checkout scm;
    }

    // stage('SonarQube analysis') {
    //         def scannerHome = tool 'SonarScanner 2.13.1';
    //         withSonarQubeEnv('My SonarQube Server') { // If you have configured more than one global server connection, you can specify its name
    //         sh "${scannerHome}/bin/sonar-scanner"
    //     }
    // }
    
    stage('Stop stack prod-front'){
        sh 'docker stack ls | grep "workflow" -v | grep "prod-back" -v | grep "prod-api" -v | grep "dev" -v | grep "preprod" -v | awk -F " " \'{ if (NR>1) print $1 }\' | xargs docker stack kill | xargs docker stack rm || true'
        sh 'docker stack ls | grep "workflow" -v | grep "prod-back" -v | grep "prod-api" -v | grep "dev" -v | grep "preprod" -v | awk -F " " \'{ if (NR>1) print $1 }\' | xargs docker stack rm || true'
    }

    // stage('Build image prod-front'){
    //     imageFront     = docker.build("prod-front", "-f docker/prod-server/Dockerfile .");
    // }

    // stage('Publish to Nexus Repository Manager'){
    //     sh 'docker tag prod-front:latest repo.dsp-archiwebo20-db-od-sn-bm.fr/prod-front:latest'
    //     sh 'docker login --username jenkins-user --password jenkins  repo.dsp-archiwebo20-db-od-sn-bm.fr'
    //     sh 'docker push repo.dsp-archiwebo20-db-od-sn-bm.fr/prod-front:latest'
    // }

    stage ('Pull to Nexus Repository Manager'){
        sh 'docker login --username jenkins-user --password jenkins  repo.dsp-archiwebo20-db-od-sn-bm.fr'
        sh 'docker pull repo.dsp-archiwebo20-db-od-sn-bm.fr/prod-front:latest'
    }

    stage('Deploy stack prod-front'){
        sh 'docker login --username jenkins-user --password jenkins repo.dsp-archiwebo20-db-od-sn-bm.fr'
        sh 'docker stack deploy --with-registry-auth --compose-file docker/prod-server/docker-compose.yml prod-front'
    }
    
}